generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id               String            @id @default(cuid())
  name             String?
  email            String            @unique
  emailVerified    DateTime?
  image            String?
  password         String
  isPaid           Boolean           @default(false)
  phone            String?
  alpacaId         String?
  joinDate         DateTime          @default(now())
  ACHRelationship  ACHRelationship[]
  ActiveStrategies ActiveStrategies?
  sessions         Session[]
}

model PaidUsers {
  id             String   @id @default(cuid())
  userId         String
  membershipType String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model RebalanceDates {
  lastRebalance DateTime
  nextRebalance DateTime
  strategy      String   @id @unique
}

model ActiveStrategies {
  id          String   @default(cuid())
  userId      String   @unique
  strategyId  String
  amount      Float
  activatedAt DateTime @default(now())
  updatedAt   DateTime @updatedAt
  alpacaid    String   @unique
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([id, userId])
}

model CongressBuys {
  ticker        String   @id @unique
  createdAt     DateTime
  updatedAt     DateTime
  navPercentage Float
}

model StrategyInfo {
  name             String   @id @unique
  averageYoYReturn String
  lastYearReturn   String
  sharpeRatio      String
  about            String
  updatedAt        DateTime
  image            String?
  category         String?
}

model InterestList {
  id        String   @id @default(cuid())
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CongressLongShort {
  ticker        String   @unique
  createdAt     DateTime
  updatedAt     DateTime
  navPercentage Float
}

model NancyPelosi {
  ticker        String   @unique
  navPercentage Float
  updatedAt     DateTime
  createdAt     DateTime
}

model TradeErrors {
  id         String   @id
  userId     String
  strategyId String
  error      String
  createdAt  DateTime @default(now())
  updatedAt  DateTime
}

model ACHRelationship {
  id                String   @id
  userId            String
  accountId         String
  createdAt         DateTime
  updatedAt         DateTime
  status            String
  accountOwnerName  String
  bankAccountType   String
  bankAccountNumber String
  bankRoutingNumber String
  nickname          String
  processorToken    String?
  User              User     @relation(fields: [userId], references: [id])

  @@unique([userId, accountId])
}
